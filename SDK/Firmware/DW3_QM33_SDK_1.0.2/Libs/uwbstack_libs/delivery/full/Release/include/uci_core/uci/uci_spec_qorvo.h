/*
 * SPDX-FileCopyrightText: Copyright (c) 2024 Qorvo US, Inc.
 *
 * SPDX-License-Identifier: LicenseRef-QORVO-1
 */

#pragma once

/* Values from UCI Messages spec */

#define ANT_KEYS_MAX_COUNT (17) /* 4(NORANGING) + 4(Az) + 4(El) + 5(Combo) per channel */

#define QORVO_BIT_0 0x01
#define QORVO_BIT_1 0x02
#define QORVO_BIT_2 0x04

#define QORVO_BIT_3 0x08
#define QORVO_BIT_4 0x10
#define QORVO_BIT_5 0x20
#define QORVO_BIT_6 0x40
#define QORVO_BIT_7 0x80 // (Qorvo RFU)

// Action group first three bits
#define RANGE_ANT_SET_TYPE 0x00
#define AZIMUTH_ANT_SET_TYPE 0x00 | QORVO_BIT_0
#define ELEVATION_ANT_SET_TYPE 0x00 | QORVO_BIT_1
#define AZIMUTH_ELEVATION_ANT_SET_TYPE 0x00 | QORVO_BIT_0 | QORVO_BIT_1

// Sub-action (last 5 bits)
#define DIRECTION_RX 0x00
#define DIRECTION_TX 0x00 | QORVO_BIT_3

#define NORANGING 0x00
#define RANGING 0x00 | QORVO_BIT_4

#define AZIMUTH 0x00 | QORVO_BIT_5
#define ELEVATION 0x00 | QORVO_BIT_6

/**
 * enum uci_oid_qorvo_ext1 - Opcode identifiers for UCI_GID_QORVO_EXT1.
 *
 * @UCI_OID_QORVO_SE_TEST_LOOPBACK:
 *      To be documented.
 * @UCI_OID_QORVO_SE_CLEAR_DATA_PARTITION:
 *      To be documented.
 * @UCI_OID_QORVO_SE_GET_BINDING_STATUS:
 *      To be documented.
 * @UCI_OID_QORVO_SE_DO_BINDING:
 *      To be documented.
 * @UCI_OID_QORVO_SE_GET_CPLC:
 *      To be documented.
 * @UCI_OID_QORVO_SE_MANAGE_TEST_RDS:
 *     Set test command.
 * @UCI_OID_QORVO_SE_GET_RDS_SEC:
 *      To be documented.
 * @UCI_OID_QORVO_SE_MANAGE_TEST_RDS_SEC:
 *      To be documented.
 * @UCI_OID_QORVO_SE_ERASE_RDS_LIST:
 *      To be documented.
 * @UCI_OID_QORVO_SE_START_SECURE_CHANNEL:
 *      To be documented.
 */
enum uci_oid_qorvo_ext1 {
	UCI_OID_QORVO_SE_TEST_LOOPBACK = 0x16,
	UCI_OID_QORVO_SE_CLEAR_DATA_PARTITION = 0x17,
	UCI_OID_QORVO_SE_GET_BINDING_STATUS = 0x18,
	UCI_OID_QORVO_SE_DO_BINDING = 0x19,
	UCI_OID_QORVO_SE_GET_CPLC = 0x22,
	UCI_OID_QORVO_SE_MANAGE_TEST_RDS = 0x23,
	UCI_OID_QORVO_SE_GET_RDS_SEC = 0x24,
	UCI_OID_QORVO_SE_MANAGE_TEST_RDS_SEC = 0x25,
	UCI_OID_QORVO_SE_ERASE_RDS_LIST = 0x26,
	UCI_OID_QORVO_SE_START_SECURE_CHANNEL = 0x27,
};

/**
 * enum uci_oid_qorvo_ext2 - Opcode identifiers for UCI_GID_QORVO_EXT2.
 *
 * @UCI_OID_QORVO_TEST_DEBUG:
 *     Opcode for tests additional notification.
 * @UCI_OID_QORVO_TEST_TX_CW:
 *     Opcode for continuous wave transmission test.
 * @UCI_OID_QORVO_TEST_PLLRF:
 *     Opcode for PLL status test.
 * @UCI_OID_QORVO_FIRA_RANGE_DIAGNOSTICS:
 *     Diagnostics notifications.
 * @UCI_OID_QORVO_SESSION_GET:
 *     Retrieve all existing sessions.
 * @UCI_OID_QORVO_FIRA_SET_ANT_FLEX_CONFIG:
 *     Set FiRa antenna flexibility configuration.
 * @UCI_OID_QORVO_FIRA_GET_ANT_FLEX_CONFIG:
 *     Get FiRa antenna flexibility configuration.
 * @UCI_OID_QORVO_CCC_SET_ANT_FLEX_CONFIG:
 *     Set ccc antenna flexibility configuration.
 * @UCI_OID_QORVO_CCC_GET_ANT_FLEX_CONFIG:
 *     Get ccc antenna flexibility configuration.
 * @UCI_OID_QORVO_CORE_PSDU_DUMP:
 *     Dump Notification.
 * @UCI_OID_QORVO_CORE_GET_MEM_STATS:
 *	Retrieve UWBS memory statistics.
 * @UCI_OID_QORVO_CORE_GET_POWER_STATS:
 *	Retrieve UWB power statistics.
 * @UCI_OID_QORVO_CORE_GET_CPU_STATS:
 *	Retrieve UWB cpu statistics.
 * @UCI_OID_QORVO_CORE_RESET_CPU_STATS:
 *	Reset UWB cpu statistics.
 * @UCI_OID_QORVO_CORE_GET_DEVICE_STATS:
 *	Get UWB device statistics.
 * @UCI_OID_QORVO_CORE_ERASE_CERTS:
 *     Erase qorvo certificates.
 * @UCI_OID_QORVO_CORE_DEVICE_BOOT:
 *     UWBS boot notification.
 * @UCI_OID_QORVO_CORE_QUERY_GPIO_TIMESTAMP:
 *     Query GPIO timestamp data.
 */
enum uci_oid_qorvo_ext2 {
	UCI_OID_QORVO_TEST_DEBUG = 0x00,
	UCI_OID_QORVO_TEST_TX_CW = 0x01,
	UCI_OID_QORVO_TEST_PLLRF = 0x02,
	UCI_OID_QORVO_FIRA_RANGE_DIAGNOSTICS = 0x03,
	UCI_OID_QORVO_SESSION_GET = 0x07,
	UCI_OID_QORVO_FIRA_SET_ANT_FLEX_CONFIG = 0x08,
	UCI_OID_QORVO_FIRA_GET_ANT_FLEX_CONFIG = 0x09,
	UCI_OID_QORVO_CCC_SET_ANT_FLEX_CONFIG = 0x0a,
	UCI_OID_QORVO_CCC_GET_ANT_FLEX_CONFIG = 0x0b,
	UCI_OID_QORVO_CORE_PSDU_DUMP = 0x22,
	UCI_OID_QORVO_CORE_GET_MEM_STATS = 0x23,
	UCI_OID_QORVO_CORE_GET_POWER_STATS = 0x24,
	UCI_OID_QORVO_CORE_GET_CPU_STATS = 0x25,
	UCI_OID_QORVO_CORE_RESET_CPU_STATS = 0x26,
	UCI_OID_QORVO_CORE_GET_DEVICE_STATS = 0x27,
	UCI_OID_QORVO_CORE_ERASE_CERTS = 0x30,
	UCI_OID_QORVO_CORE_DEVICE_BOOT = 0x31,
	UCI_OID_QORVO_CORE_QUERY_GPIO_TIMESTAMP = 0x36,
};

/**
 * enum uci_oid_qorvo_calib - Opcode identifiers for UCI_GID_QORVO_CALIB.
 *
 * @UCI_OID_QORVO_CALIB_RESET:
 *     Request to reset the calibration data.
 *
 * TODO: to be removed and merged with UCI_GID_QORVO_MAC.
 */
enum uci_oid_qorvo_calib {
	UCI_OID_QORVO_CALIB_RESET = 0x00,
};

/**
 * enum uci_qorvo_boot_reason - Boot reason sent in QORVO_CORE_DEVICE_BOOT_NTF.
 *
 * @UCI_QORVO_BOOT_REASON_UNKNOWN:
 *     Unknown.
 * @UCI_QORVO_BOOT_REASON_FATAL_ERROR_RESET:
 *     Reboot after fatal error.
 */
enum uci_qorvo_boot_reason {
	UCI_QORVO_BOOT_REASON_UNKNOWN = 0,
	UCI_QORVO_BOOT_REASON_FATAL_ERROR_RESET = 1,
};

enum uci_qorvo_fira_ant_flex_keys {
	ANT_SETS_RANGE_RX_ANT_SET_NONRANGING = RANGE_ANT_SET_TYPE | DIRECTION_RX | NORANGING,
	ANT_SETS_RANGE_RX_ANT_SET_RANGING = RANGE_ANT_SET_TYPE | DIRECTION_RX | RANGING,
	ANT_SETS_RANGE_TX_ANT_SET_NONRANGING = RANGE_ANT_SET_TYPE | DIRECTION_TX | NORANGING,
	ANT_SETS_RANGE_TX_ANT_SET_RANGING = RANGE_ANT_SET_TYPE | DIRECTION_TX | RANGING,
	ANT_SETS_AZIMUTH_RX_ANT_SET_NONRANGING = AZIMUTH_ANT_SET_TYPE | DIRECTION_RX | NORANGING,
	ANT_SETS_AZIMUTH_RX_ANT_SET_RANGING = AZIMUTH_ANT_SET_TYPE | DIRECTION_RX | RANGING,
	ANT_SETS_AZIMUTH_TX_ANT_SET_NONRANGING = AZIMUTH_ANT_SET_TYPE | DIRECTION_TX | NORANGING,
	ANT_SETS_AZIMUTH_TX_ANT_SET_RANGING = AZIMUTH_ANT_SET_TYPE | DIRECTION_TX | RANGING,
	ANT_SETS_ELEVATION_RX_ANT_SET_NONRANGING = ELEVATION_ANT_SET_TYPE | DIRECTION_RX |
						   NORANGING,
	ANT_SETS_ELEVATION_RX_ANT_SET_RANGING = ELEVATION_ANT_SET_TYPE | DIRECTION_RX | RANGING,
	ANT_SETS_ELEVATION_TX_ANT_SET_NONRANGING = ELEVATION_ANT_SET_TYPE | DIRECTION_TX |
						   NORANGING,
	ANT_SETS_ELEVATION_TX_ANT_SET_RANGING = ELEVATION_ANT_SET_TYPE | DIRECTION_TX | RANGING,
	ANT_SETS_AZIMUTH_ELEVATION_RX_ANT_SET_NONRANGING = AZIMUTH_ELEVATION_ANT_SET_TYPE |
							   DIRECTION_RX | NORANGING,
	ANT_SETS_AZIMUTH_ELEVATION_RX_ANT_SET_RANGING_AZIMUTH = AZIMUTH_ELEVATION_ANT_SET_TYPE |
								DIRECTION_RX | RANGING | AZIMUTH,
	ANT_SETS_AZIMUTH_ELEVATION_RX_ANT_SET_RANGING_ELEVATION =
		AZIMUTH_ELEVATION_ANT_SET_TYPE | DIRECTION_RX | RANGING | ELEVATION,
	ANT_SETS_AZIMUTH_ELEVATION_TX_ANT_SET_NONRANGING = AZIMUTH_ELEVATION_ANT_SET_TYPE |
							   DIRECTION_TX | NORANGING,
	ANT_SETS_AZIMUTH_ELEVATION_TX_ANT_SET_RANGING = AZIMUTH_ELEVATION_ANT_SET_TYPE |
							DIRECTION_TX | RANGING,
};
